var three = require("three");
var signals = require("signals");

function PortalLink(portalA, portalB) {
	this.portalA = portalA;
	this.portalB = portalB;
	this.requestRenderPassSignal = new signals.Signal();

	portalA.portalLink = this;
	portalB.portalLink = this;
	
	portalA.other = other.bind(this, portalA);
	portalB.other = other.bind(this, portalB);

	this.other = other.bind(this);
	this.getDeltaMatrix = getDeltaMatrix.bind(this);
	this.requestAddingRenderPassOfOtherWorld = requestAddingRenderPassOfOtherWorld.bind(this);
}

function other(from) {
	if(from === this.portalA) {
		return this.portalB;
	} else if(from === this.portalB) {
		return this.portalA;
	}
}

function getDeltaMatrix(from) {
	var to;
	if(from === this.portalA) {
		to = this.portalB;
	} else if(from === this.portalB) {
		to = this.portalA;
	}

	var matrix = new three.Matrix4();
	matrix.getInverse(from.mesh.matrixWorld).premultiply(to.mesh.matrixWorld);
	// var matrix2 = new three.Matrix4();
	// matrix2.getInverse(matrix);
	return matrix;
}

function requestAddingRenderPassOfOtherWorld(from) {
	// var otherPortal = this.other(from);
	this.requestRenderPassSignal.dispatch(from);
}

module.exports = PortalLink;